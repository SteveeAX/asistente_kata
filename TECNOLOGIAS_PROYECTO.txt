TECNOLOGÍAS Y HERRAMIENTAS DEL PROYECTO ASISTENTE KATA
===========================================================

GOOGLE CLOUD PLATFORM
======================
- Google Cloud Firestore: Registro de interacciones y logging de datos del usuario
- Google Cloud Speech-to-Text: Transcripción de voz a texto
- Google Cloud Text-to-Speech: Síntesis de voz
- Google AI Generative Language (Gemini): IA generativa para respuestas conversacionales

DESARROLLO WEB
==============
- Flask: Framework web Python para la interfaz de administración
- HTML/CSS/JavaScript: Frontend para interfaz web de gestión
- Werkzeug: Utilidades WSGI para Flask

BASE DE DATOS
=============
- SQLite: Base de datos local para almacenamiento de usuarios, recordatorios y configuraciones
- Sistema Multi-Usuario: Arquitectura personalizada para gestión de múltiples usuarios

RECONOCIMIENTO DE VOZ Y AUDIO
=============================
- Porcupine Wake Word Detection: Detección de palabra de activación "Catalina"
- SoundDevice/SoundFile: Grabación y procesamiento de audio
- Adaptación de frases: Personalización de STT con nombres de contactos

INTERFAZ DE USUARIO
===================
- CustomTkinter: GUI moderna para la aplicación principal
- Modo Claro/Oscuro: Sistema de temas personalizable
- Reloj Digital: Interfaz principal de reloj con alertas

COMUNICACIONES
==============
- Telegram Bot API: Alertas de emergencia y notificaciones
- MQTT (Paho): Control de dispositivos domóticos inteligentes
- Zigbee2MQTT: Integración con dispositivos Zigbee

PROGRAMACIÓN DE TAREAS
======================
- APScheduler: Programador de recordatorios y tareas automatizadas
- Threading: Manejo concurrente de audio, botones y procesos

DESARROLLO Y UTILIDADES
=======================
- Requests: Cliente HTTP para APIs
- Pillow: Procesamiento de imágenes subidas
- TkCalendar: Widget de calendario para selección de fechas
- Python-dotenv: Gestión de variables de entorno

HARDWARE Y SISTEMA
==================
- Raspberry Pi: Plataforma de ejecución principal
- Botón físico: Control por hardware para confirmaciones y emergencias
- Micrófono/Altavoces: Entrada y salida de audio

INTEGRACIÓN CON IA
==================
- RouterCentral: Sistema de enrutamiento inteligente para respuestas
- Context Enricher: Enriquecimiento contextual de consultas
- Conversation Memory: Memoria conversacional para personalización

RESUMEN TÉCNICO
===============
El proyecto utiliza una arquitectura híbrida que combina:
- Servicios cloud de Google para IA y procesamiento de audio
- Base de datos local SQLite para almacenamiento offline
- Interfaces web y de escritorio para administración
- Integración IoT mediante MQTT para domótica
- Sistema de notificaciones via Telegram
- Hardware especializado en Raspberry Pi para funcionalidad autónoma